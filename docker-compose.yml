version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend

  postgres:
    image: postgres:15
    container_name: link_postgres
    environment:
      POSTGRES_DB: linkdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - "5433:5432"
    volumes:
      - link_pgdata:/var/lib/postgresql/data
    networks:
      - backend

  analytics_postgres:
    image: postgres:15
    container_name: analytics_postgres
    environment:
      POSTGRES_DB: analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - "5444:5432"
    volumes:
      - analytics_pgdata:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:5050"
    networks:
      - backend

  api:
    build:
      context: ./api
    depends_on:
      - linkservice
      - analyticsservice
      - kafka
    ports:
      - "8080:8080"
    networks:
      - backend

  linkservice:
    build:
      context: ./LinkService
    depends_on:
      - postgres
    ports:
      - "8081:8081"
    networks:
      - backend
    environment:
      DATABASE_URL: postgres://postgres:123@postgres:5432/linkdb?sslmode=disable

  analyticsservice:
    build:
      context: ./LinkService
    depends_on:
      - analytics_postgres
      - kafka
    ports:
      - "8082:8082"
    networks:
      - backend
    environment:
      DATABASE_URL: postgres://postgres:123@analytics_postgres:5432/analytics?sslmode=disable

volumes:
  link_pgdata:
  analytics_pgdata:

networks:
  backend:
    driver: bridge
